//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SnowrunnerMT.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SnowrunnerMT.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;locale&gt;
        ///  &lt;controls&gt;
        ///    &lt;main
        ///        Button_CommonTweaks=&quot;Common tweaks&quot;
        ///        Button_SpecialTweaks=&quot;Special tweaks&quot;
        ///        Button_SaveBackups=&quot;Save backups&quot;
        ///        Button_GameDir=&quot;Select game directory&quot;
        ///        Button_Apply=&quot;Apply tweaks&quot;
        ///        Button_Backup=&quot;Make backup of current files&quot;
        ///        Button_Restore=&quot;Restore original files&quot;
        ///        Button_ModsBefore=&quot;Mods before tweaks (open folder)&quot;
        ///        Button_ModsAfter=&quot;Mods after tweaks (open folder)&quot;
        ///        FolderBrowser_SelectPath [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string en_US {
            get {
                return ResourceManager.GetString("en-US", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream JobDone {
            get {
                return ResourceManager.GetStream("JobDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Layer1 {
            get {
                object obj = ResourceManager.GetObject("Layer1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Layer2 {
            get {
                object obj = ResourceManager.GetObject("Layer2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Layer3 {
            get {
                object obj = ResourceManager.GetObject("Layer3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Layers {
            get {
                object obj = ResourceManager.GetObject("Layers", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;locale&gt;
        ///  &lt;controls&gt;
        ///    &lt;main
        ///        Button_CommonTweaks=&quot;Обычные твики&quot;
        ///        Button_SpecialTweaks=&quot;Особые твики&quot;
        ///        Button_SaveBackups=&quot;Бэкапы сохранений&quot;
        ///        Button_GameDir=&quot;Указать путь к папке игры&quot;
        ///        Button_Apply=&quot;Применить настройки&quot;
        ///        Button_Backup=&quot;Сделать бэкап текущих файлов&quot;
        ///        Button_Restore=&quot;Восстановить оригинальные файлы&quot;
        ///        Button_ModsBefore=&quot;Моды, устанавливаемые в начале&quot;
        ///        Button_ModsAfter=&quot;Моды, устанавливаемые в конце&quot;
        ///        Folde [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string ru_RU {
            get {
                return ResourceManager.GetString("ru-RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;SnowrunnerTweaks&gt;
        ///  &lt;ByParameter&gt;
        ///    &lt;Group parameter=&quot;FuelConsumption&quot; type=&quot;Real&quot;&gt;
        ///      &lt;Tweak directory=&quot;engines&quot;/&gt;
        ///      &lt;Tweak directory=&quot;gearboxes&quot;/&gt;
        ///    &lt;/Group&gt;
        ///    &lt;Group parameter=&quot;FuelCapacity&quot; type=&quot;Integer&quot;&gt;
        ///      &lt;Tweak directory=&quot;trucks&quot;/&gt;
        ///      &lt;Tweak directory=&quot;addons&quot;/&gt;
        ///      &lt;Tweak directory=&quot;trailers&quot;/&gt;
        ///    &lt;/Group&gt;
        ///    &lt;Group parameter=&quot;RepairsCapacity&quot; type=&quot;Integer&quot;&gt;
        ///      &lt;Tweak directory=&quot;addons&quot;/&gt;
        ///      &lt;Tweak directory=&quot;trailers&quot;/&gt;
        ///    &lt;/Group&gt;
        ///    &lt;Group paramet [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Tweaks {
            get {
                return ResourceManager.GetString("Tweaks", resourceCulture);
            }
        }
    }
}
